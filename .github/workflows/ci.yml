name: Workflow CI

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
      MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
      MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.7

      - name: Install jq (JSON parser)
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Check environment variables
        run: |
          echo "MLFLOW_TRACKING_URI=$MLFLOW_TRACKING_URI"
          echo "MLFLOW_TRACKING_USERNAME=$MLFLOW_TRACKING_USERNAME"
          echo "MLFLOW_TRACKING_PASSWORD=$MLFLOW_TRACKING_PASSWORD"
          echo "DOCKER_USERNAME=$DOCKER_USERNAME"
          echo "DOCKER_PASSWORD=****"

      - name: Setup Miniconda & create environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.12
          auto-update-conda: true
          environment-file: MLProject/conda.yaml
          activate-environment: workflow-ci-env
          use-mamba: true

      - name: Install additional dependencies
        run: |
          conda run -n workflow-ci-env pip install mlflow rclone

      - name: Run MLflow Project for retraining
        run: conda run -n workflow-ci-env mlflow run MLProject

      - name: Get latest MLflow run_id
        id: get_run_id
        run: |
          export MLFLOW_TRACKING_URI=$MLFLOW_TRACKING_URI
          export MLFLOW_TRACKING_USERNAME=$MLFLOW_TRACKING_USERNAME
          export MLFLOW_TRACKING_PASSWORD=$MLFLOW_TRACKING_PASSWORD
          RUN_ID=$(mlflow runs list --experiment-name random_forest_personality --order-by attribute.start_time desc --max-results 1 --output json | jq -r '.[0].info.run_id')
          echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT

      - name: Upload MLflow run artifacts to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-artifacts-${{ steps.get_run_id.outputs.run_id }}
          path: mlruns/${{ steps.get_run_id.outputs.run_id }}

      - name: Build Docker Image
        run: |
          docker build -t $DOCKER_USERNAME/personality-classifier:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag Docker Image
        id: tag_docker
        run: |
          TAG=$(date +'%Y%m%d%H%M%S')
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          docker tag $DOCKER_USERNAME/personality-classifier:latest $DOCKER_USERNAME/personality-classifier:$TAG

      - name: Push Docker Images
        run: |
          docker push $DOCKER_USERNAME/personality-classifier:latest
          docker push $DOCKER_USERNAME/personality-classifier:${{ steps.tag_docker.outputs.tag }}

      - name: Post Log in to Docker Hub
        if: always()
        run: echo "Post Docker login cleanup"

      - name: Post Set up Python
        if: always()
        run: echo "Post Python setup cleanup"

      - name: Post Checkout
        if: always()
        run: echo "Post checkout cleanup"

      - name: Complete job
        if: always()
        run: echo "CI workflow completed"
